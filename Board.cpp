#include "Board.h"

float positions[] = {
//A1
-1.0f,-1.0f,
-0.75f,-1.0f,
-0.75f,-0.75f,
-0.75f,-0.75f,
-1.0f,-0.75f,
-1.0f,-1.0f,
//A3
-1.0f,-0.5f,
-0.75f,-0.5f,
-0.75f,-0.25f,
-0.75f,-0.25f,
-1.0f,-0.25f,
-1.0f,-0.5f,
//A5
-1.0f,0.0f,
-0.75f,0.0f,
-0.75f,0.25f,
-0.75f,0.25f,
-1.0f,0.25f,
-1.0f,0.0f,
//A7
-1.0f,0.5f,
-0.75f,0.5f,
-0.75f,0.75f,
-0.75f,0.75f,
-1.0f,0.75f,
-1.0f,0.5f,
//C1
-0.5f,-1.0f,
-0.25f,-1.0f,
-0.25f,-0.75f,
-0.25f,-0.75f,
-0.5f,-0.75f,
-0.5f,-1.0f,
//C3
-0.5f,-0.5f,
-0.25f,-0.5f,
-0.25f,-0.25f,
-0.25f,-0.25f,
-0.5f,-0.25f,
-0.5f,-0.5f,
//C5
-0.5f,0.0f,
-0.25f,0.0f,
-0.25f,0.25f,
-0.25f,0.25f,
-0.5f,0.25f,
-0.5f,0.0f,
//C7
-0.5f,0.5f,
-0.25f,0.5f,
-0.25f,0.75f,
-0.25f,0.75f,
-0.5f,0.75f,
-0.5f,0.5f,
//E1
0.0f,-1.0f,
0.25f,-1.0f,
0.25f,-0.75f,
0.25f,-0.75f,
0.0f,-0.75f,
0.0f,-1.0f,
//E3
0.0f,-0.5f,
0.25f,-0.5f,
0.25f,-0.25f,
0.25f,-0.25f,
0.0f,-0.25f,
0.0f,-0.5f,
//E5
0.0f,0.0f,
0.25f,0.0f,
0.25f,0.25f,
0.25f,0.25f,
0.0f,0.25f,
0.0f,0.0f,
//E7
0.0f,0.5f,
0.25f,0.5f,
0.25f,0.75f,
0.25f,0.75f,
0.0f,0.75f,
0.0f,0.5f,
//G1
0.5f,-1.0f,
0.75f,-1.0f,
0.75f,-0.75f,
0.75f,-0.75f,
0.5f,-0.75f,
0.5f,-1.0f,
//G3
0.5f,-0.5f,
0.75f,-0.5f,
0.75f,-0.25f,
0.75f,-0.25f,
0.5f,-0.25f,
0.5f,-0.5f,
//G5
0.5f,0.0f,
0.75f,0.0f,
0.75f,0.25f,
0.75f,0.25f,
0.5f,0.25f,
0.5f,0.0f,
//G7
0.5f,0.5f,
0.75f,0.5f,
0.75f,0.75f,
0.75f,0.75f,
0.5f,0.75f,
0.5f,0.5f,
//B2
-0.75f,-0.75f,
-0.5f,-0.75f,
-0.5f,-0.5f,
-0.5f,-0.5f,
-0.75f,-0.5f,
-0.75f,-0.75f,
//B4
-0.75f,-0.25f,
-0.5f,-0.25f,
-0.5f,0.0f,
-0.5f,0.0f,
-0.75f,0.0f,
-0.75f,-0.25f,
//B6
-0.75f,0.25f,
-0.5f,0.25f,
-0.5f,0.5f,
-0.5f,0.5f,
-0.75f,0.5f,
-0.75f,0.25f,
//B8
-0.75f,0.75f,
-0.5f,0.75f,
-0.5f,1.0f,
-0.5f,1.0f,
-0.75f,1.0f,
-0.75f,0.75f,
//D2
-0.25f,-0.75f,
0.0f,-0.75f,
0.0f,-0.5f,
0.0f,-0.5f,
-0.25f,-0.5f,
-0.25f,-0.75f,
//D4
-0.25f,-0.25f,
0.0f,-0.25f,
0.0f,0.0f,
0.0f,0.0f,
-0.25f,0.0f,
-0.25f,-0.25f,
//D6
-0.25f,0.25f,
0.0f,0.25f,
0.0f,0.5f,
0.0f,0.5f,
-0.25f,0.5f,
-0.25f,0.25f,
//D8
-0.25f,0.75f,
0.0f,0.75f,
0.0f,1.0f,
0.0f,1.0f,
-0.25f,1.0f,
-0.25f,0.75f,
//F2
0.25f,-0.75f,
0.5f,-0.75f,
0.5f,-0.5f,
0.5f,-0.5f,
0.25f,-0.5f,
0.25f,-0.75f,
//F4
0.25f,-0.25f,
0.5f,-0.25f,
0.5f,0.0f,
0.5f,0.0f,
0.25f,0.0f,
0.25f,-0.25f,
//F6
0.25f,0.25f,
0.5f,0.25f,
0.5f,0.5f,
0.5f,0.5f,
0.25f,0.5f,
0.25f,0.25f,
//F8
0.25f,0.75f,
0.5f,0.75f,
0.5f,1.0f,
0.5f,1.0f,
0.25f,1.0f,
0.25f,0.75f,
//H2
0.75f,-0.75f,
1.0f,-0.75f,
1.0f,-0.5f,
1.0f,-0.5f,
0.75f,-0.5f,
0.75f,-0.75f,
//H4
0.75f,-0.25f,
1.0f,-0.25f,
1.0f,0.0f,
1.0f,0.0f,
0.75f,0.0f,
0.75f,-0.25f,
//H6
0.75f,0.25f,
1.0f,0.25f,
1.0f,0.5f,
1.0f,0.5f,
0.75f,0.5f,
0.75f,0.25f,
//H8
0.75f,0.75f,
1.0f,0.75f,
1.0f,1.0f,
1.0f,1.0f,
0.75f,1.0f,
0.75f,0.75f,
/* ----------------------------------------------------------------*/
//B1
-0.75f,-1.0f,
-0.5f,-1.0f,
-0.5f,-0.75f,
-0.5f,-0.75f,
-0.75f,-0.75f,
-0.75f,-1.0f,
//B3
-0.75f,-0.5f,
-0.5f,-0.5f,
-0.5f,-0.25f,
-0.5f,-0.25f,
-0.75f,-0.25f,
-0.75f,-0.5f,
//B5
-0.75f,0.0f,
-0.5f,0.0f,
-0.5f,0.25f,
-0.5f,0.25f,
-0.75f,0.25f,
-0.75f,0.0f,
//B7
-0.75f,0.5f,
-0.5f,0.5f,
-0.5f,0.75f,
-0.5f,0.75f,
-0.75f,0.75f,
-0.75f,0.5f,
//D1
-0.25f,-1.0f,
0.0f,-1.0f,
0.0f,-0.75f,
0.0f,-0.75f,
-0.25f,-0.75f,
-0.25f,-1.0f,
//D3
-0.25f,-0.5f,
0.0f,-0.5f,
0.0f,-0.25f,
0.0f,-0.25f,
-0.25f,-0.25f,
-0.25f,-0.5f,
//D5
-0.25f,0.0f,
0.0f,0.0f,
0.0f,0.25f,
0.0f,0.25f,
-0.25f,0.25f,
-0.25f,0.0f,
//D7
-0.25f,0.5f,
0.0f,0.5f,
0.0f,0.75f,
0.0f,0.75f,
-0.25f,0.75f,
-0.25f,0.5f,
//F1
0.25f,-1.0f,
0.5f,-1.0f,
0.5f,-0.75f,
0.5f,-0.75f,
0.25f,-0.75f,
0.25f,-1.0f,
//F3
0.25f,-0.5f,
0.5f,-0.5f,
0.5f,-0.25f,
0.5f,-0.25f,
0.25f,-0.25f,
0.25f,-0.5f,
//F5
0.25f,0.0f,
0.5f,0.0f,
0.5f,0.25f,
0.5f,0.25f,
0.25f,0.25f,
0.25f,0.0f,
//F7
0.25f,0.5f,
0.5f,0.5f,
0.5f,0.75f,
0.5f,0.75f,
0.25f,0.75f,
0.25f,0.5f,
//H1
0.75f,-1.0f,
1.0f,-1.0f,
1.0f,-0.75f,
1.0f,-0.75f,
0.75f,-0.75f,
0.75f,-1.0f,
//H3
0.75f,-0.5f,
1.0f,-0.5f,
1.0f,-0.25f,
1.0f,-0.25f,
0.75f,-0.25f,
0.75f,-0.5f,
//H5
0.75f,0.0f,
1.0f,0.0f,
1.0f,0.25f,
1.0f,0.25f,
0.75f,0.25f,
0.75f,0.0f,
//H7
0.75f,0.5f,
1.0f,0.5f,
1.0f,0.75f,
1.0f,0.75f,
0.75f,0.75f,
0.75f,0.5f,
//A2
-1.0f,-0.75f,
-0.75f,-0.75f,
-0.75f,-0.5f,
-0.75f,-0.5f,
-1.0f,-0.5f,
-1.0f,-0.75f,
//A4
-1.0f,-0.25f,
-0.75f,-0.25f,
-0.75f,0.0f,
-0.75f,0.0f,
-1.0f,0.0f,
-1.0f,-0.25f,
//A6
-1.0f,0.25f,
-0.75f,0.25f,
-0.75f,0.5f,
-0.75f,0.5f,
-1.0f,0.5f,
-1.0f,0.25f,
//A8
-1.0f,0.75f,
-0.75f,0.75f,
-0.75f,1.0f,
-0.75f,1.0f,
-1.0f,1.0f,
-1.0f,0.75f,
//C2
-0.5f,-0.75f,
-0.25f,-0.75f,
-0.25f,-0.5f,
-0.25f,-0.5f,
-0.5f,-0.5f,
-0.5f,-0.75f,
//C4
-0.5f,-0.25f,
-0.25f,-0.25f,
-0.25f,0.0f,
-0.25f,0.0f,
-0.5f,0.0f,
-0.5f,-0.25f,
//C6
-0.5f,0.25f,
-0.25f,0.25f,
-0.25f,0.5f,
-0.25f,0.5f,
-0.5f,0.5f,
-0.5f,0.25f,
//C8
-0.5f,0.75f,
-0.25f,0.75f,
-0.25f,1.0f,
-0.25f,1.0f,
-0.5f,1.0f,
-0.5f,0.75f,
//E2
0.0f,-0.75f,
0.25f,-0.75f,
0.25f,-0.5f,
0.25f,-0.5f,
0.0f,-0.5f,
0.0f,-0.75f,
//E4
0.0f,-0.25f,
0.25f,-0.25f,
0.25f,0.0f,
0.25f,0.0f,
0.0f,0.0f,
0.0f,-0.25f,
//E6
0.0f,0.25f,
0.25f,0.25f,
0.25f,0.5f,
0.25f,0.5f,
0.0f,0.5f,
0.0f,0.25f,
//E8
0.0f,0.75f,
0.25f,0.75f,
0.25f,1.0f,
0.25f,1.0f,
0.0f,1.0f,
0.0f,0.75f,
//G2
0.5f,-0.75f,
0.75f,-0.75f,
0.75f,-0.5f,
0.75f,-0.5f,
0.5f,-0.5f,
0.5f,-0.75f,
//G4
0.5f,-0.25f,
0.75f,-0.25f,
0.75f,0.0f,
0.75f,0.0f,
0.5f,0.0f,
0.5f,-0.25f,
//G6
0.5f,0.25f,
0.75f,0.25f,
0.75f,0.5f,
0.75f,0.5f,
0.5f,0.5f,
0.5f,0.25f,
//G8
0.5f,0.75f,
0.75f,0.75f,
0.75f,1.0f,
0.75f,1.0f,
0.5f,1.0f,
0.5f,0.75f,
};

std::vector<VertexArray*> Boxes;

Board::Board() { 
    for(int i = 0; i < 64; i++)
        arr[i] = &positions[i*12];

    VertexBufferLayout layout; 
    layout.Push(2);

    for(int i = 0; i < 64; i++){
        VertexArray* va = new VertexArray{};
        VertexBuffer vb = VertexBuffer(ReturnBoard(i), 48);
        va->AddBuffer(vb, layout, 0);
        Boxes.push_back(va);
        va->Unbind();
        vb.Unbind();
    }
    Model = glm::translate(glm::mat4(1.0f), glm::vec3(0,0,0.9f));
}

void Board::PrintBoard(int number){ 
    for(int i = 0; i < 12; i++)
        std::cout << arr[number][i] << ", "; 
    std::cout << std::endl;
}

void Board::Draw(const Renderer& renderer, Shader& shader){
	shader.SetUniformMatrix4f("u_MVP", Model);
    for (int i = 0; i < 64; i++) {
        if(i < 32)
            shader.SetUniform1i("u_Colored", true);
        else 
            shader.SetUniform1i("u_Colored", false);

        renderer.Draw(*Boxes[i], shader);
    } 
}